adult[,c(2:7,11)] <- apply(adult[,c(2:7,11)],2,function(x){encode(x)})
C <-foci(Y=adult$sex,X=adult[,c(-7,-11)])

C$selectedVar
# 4	marital			
# 5	occupation			
# 3	education			
# 2	workclass			
# 9	hoursweek			
# 8	caploss
adult$gt50<-as.factor(adult$gt50)
replicMeans(50,"{pm_knn <- qeFairKNN(adult,yName='gt50',sensNames='sex');c(pm_knn$testAcc,pm_knn$corrs)}")
#test acc   corrs
#0.1722400 0.1077594 
runexptout <-runExpt(20,"qeFairKNN(adult,yName='gt50',c(marital=xoxo),sensNames='sex')",c(0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1),code='1')
runexptout
# $V2
# [1] 0.17540 0.17250 0.17045 0.16970 0.17100 0.17525 0.18000 0.18745 0.19705
# 
# $V3
# [1] 0.10781780 0.10786271 0.10161315 0.10160299 0.09575787 0.08723239 0.08060157 0.06671002 0.04497742
xyzPlotEDF(cbind(runexptout$V2,runexptout$V3,runexptout$V1,runexptout$code),clrs=palette(),
                   xlim=expandRange(range(runexptout$V2),1.2), 
                   ylim=expandRange(range(runexptout$V3),3.2), 
                   xlab = 'OPM',ylab = 'correlation',
                   legendPos='bottomright')
 #graph in wenxi/plot/
 
runexptout <-runExpt(20,"qeFairKNN(adult,yName='gt50',c(marital=xoxo,occupation=0.5,education=0.5),sensNames='sex')",c(0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1),code='1')
runexptout
# $V2
# [1] 0.17435 0.17705 0.17430 0.17365 0.17720 0.18040 0.17765 0.18570 0.19405
# 
# $V3
# [1] 0.12177747 0.11465778 0.11722110 0.11301507 0.10735689 0.10936871 0.09399110 0.07019966 0.05162132

marital acts better as a proxy than occupation in this case. Thus we double check with other methods
#qerf
replicMeans(10,"{rf_out <- qeFairRF(data=mortgage,yName='deny',selectProbs=c(hse_inc=5),sensNames='black');c(rf_out$corrs,rf_out$testAcc)}")

runexptout <-runExpt(5,"qeFairRF(adult,yName='gt50',deweightPars=c(marital=xoxo,occupation=0.5,education=0.5),sensNames='sex')",c(0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1),code='1')
# $V1
# [1] 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1
# 
# $V2
# [1] 0.1898747 0.1956274 0.1956515 0.1972983 0.1944905 0.2049756 0.2020984 0.2073584 0.2198339
# 
# $V3
# [1] 0.09369387 0.08457405 0.10006538 0.08464178 0.09502748 0.09184670 0.08444241 0.07741926 0.07209439

runexptout <-runExpt(5,"qeFairRF(adult,yName='gt50',deweightPars=c(marital=xoxo),sensNames='sex')",c(0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1),code='1')
# $V1
# [1] 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1
# 
# $V2
# [1] 0.1931881 0.2008246 0.1990177 0.1904670 0.1992810 0.1945812 0.2035957 0.2096208 0.2150524
# 
# $V3
# [1] 0.09973809 0.08678504 0.08690441 0.08172884 0.08022272 0.09169127 0.08558445 0.06436817 0.05768984
runexptout <-runExpt(5,"qeFairRF(adult,yName='gt50',deweightPars=c(occupation=xoxo),sensNames='sex')",c(0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1),code='1')
runexptout
# $V1
# [1] 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1
# 
# $V2
# [1] 0.1905474 0.1932084 0.1943782 0.1939746 0.1982793 0.1928174 0.2012714 0.1940779 0.1995937
# 
# $V3
# [1] 0.10135877 0.09604191 0.08867774 0.09661878 0.09570177 0.10105963 0.09682967 0.09553510 0.10023108
 qerf also shows that marital is a better proxy
 
 #ridge
 runexptout <-runExpt(5,"qeFairRidgeLog(data=adult,yName='gt50',lambdas=c(occupation=xoxo),sensNames='sex')",c(0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1),code='1')
runexptout
# $V1
# [1] 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1
# 
# $V2
# [1] 0.2276 0.2300 0.2194 0.2442 0.2236 0.2244 0.2212 0.2254 0.2250
# 
# $V3
# [1] 0.03464700 0.03474959 0.03426929 0.02652571 0.04338532 0.04815368 0.03888630 0.04018686 0.04560358
runexptout <-runExpt(5,"qeFairRidgeLog(data=adult,yName='gt50',lambdas=c(marital=xoxo),sensNames='sex')",c(0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1),code='1')
runexptout
# $V1
# [1] 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1
# 
# $V2
# [1] 0.2290 0.2172 0.2136 0.2274 0.2250 0.2380 0.2278 0.2290 0.2236
# 
# $V3
# [1] 0.04238142 0.04501476 0.04484645 0.04158580 0.04060401 0.04333028 0.03912191 0.03634488 0.03782089

ridge log has similar results, use old version qeFairRidgeLog

